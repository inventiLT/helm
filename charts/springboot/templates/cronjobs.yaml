{{ range $name, $definition := .Values.cronJobs }}
---
apiVersion: "batch/v1beta1"
kind: CronJob
metadata:
  name: {{ template "fullname" $ }}-cron-{{ $name }}
  labels:
    app: {{ template "fullname" $ }}-cron-{{ $name }}
    chart: "{{ $.Chart.Name }}-{{ $.Chart.Version }}"
    release: "{{ $.Release.Name }}"
    heritage: "{{ $.Release.Service }}"
spec:
  schedule: "{{ $definition.schedule }}"
  concurrencyPolicy: "{{ $definition.concurrencyPolicy }}"
  startingDeadlineSeconds: {{ $definition.startingDeadlineSeconds }}
  successfulJobsHistoryLimit: {{ $definition.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ $definition.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: {{ template "fullname" $ }}-cron-{{ $name }}
            image: "{{ required (printf "Value for variable cronjob.%s.imageRepository is undefined" $name) $definition.imageRepository }}:{{ required (printf "Value for variable cronjob.%s.imageTag is undefined" $name) $definition.imageTag }}"
            imagePullPolicy: "{{ $definition.imagePullPolicy | default "IfNotPresent" }}"
            {{- if $definition.command }}
            command: [ "{{ $definition.command }}" ]
            {{- end }}
            {{- if $definition.args }}
            args: 
              {{- range $definition.args }}
              - {{ . | replace "%FULLNAME%" (include "fullname" $) | quote }}
              {{- end }}
            {{- end }}
            {{- if $definition.env }}
            env:
            {{- $secretName := include "secretname" $ -}}
              {{- range $envname, $envdef := $definition.env }}
              - name: {{ $envname | quote }}
                {{- if $envdef.sensitive }}
                valueFrom:
                  secretKeyRef:
                    name: {{ $secretName | quote }}
                    key: {{ $envdef.key | default $envname | quote }}
                    {{- if $envdef.optional }}
                    optional: true
                    {{- end }}
                {{- else if $envdef.configMapKeyRef }}
                valueFrom:
                  configMapKeyRef:
{{ toYaml $envdef.configMapKeyRef | indent 20 }}
                {{- else if $envdef.secretKeyRef }}
                valueFrom:
                  secretKeyRef:
{{ toYaml $envdef.secretKeyRef | indent 20 }}
                {{- else if $envdef.tpl }}
{{ tpl $envdef.tpl $ | indent 16 }}
                {{- else }}
                value: {{ required (printf "Value for variable cronJobs.%s.env.%s.value is undefined" $name $envname) $envdef.value | quote }}
                {{- if $envdef.optional }}
                optional: true
                {{- end }}
                {{- end }}
              {{- end }}
            {{ end }}
          restartPolicy: Never
      backoffLimit: {{ $definition.backoffLimit }}
      activeDeadlineSeconds: {{ $definition.activeDeadlineSeconds }}
{{ end }}
